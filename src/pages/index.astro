---
export const prerender = false;

import '../styles/styles.css';
import Button from '../components/Button.astro';
import SideMenu from '../components/SideMenu.astro';

import { actions } from 'astro:actions';
import { getAuth } from "firebase-admin/auth";
import { app } from "../lib/firebase_server.ts";
import ScoreBox from "../components/ScoreBox.astro";

// Check for server-side authentication
let isAuthenticated = false;
const auth = getAuth(app);

if (Astro.cookies.has("__session")) {
  const sessionCookie = Astro.cookies.get("__session")?.value;
  if (sessionCookie) {
    try {
      const decodedCookie = await auth.verifySessionCookie(sessionCookie);
      if (decodedCookie) {
        isAuthenticated = true;
      }
    } catch (error) {
      // Invalid session cookie
      console.error("Session verification error:", error);
    }
  }
}
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Math Arena</title>
    <style>
      /* Styling for sign-in button */
      #auth-container {
        position: absolute;
        top: 10px;
        right: 10px;
      }
      #sign-in-button {
        background-color: #4ea7f5;
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
      }
      #side-menu-container.hidden {
        display: none;
      }
    </style>
  </head>
  <body>
    <h1 id="title">Math Arena</h1>
    
    <div id="auth-container">
      {!isAuthenticated ? (
        <a href="/login" id="sign-in-button">
          <button>Sign In</button>
        </a>
      ) : null}

      <div id="side-menu-container" class={isAuthenticated ? '' : 'hidden'}>
        {isAuthenticated ? <SideMenu /> : null}
      </div>
    </div>

    <div class="gameSelectButtons">
        <Button 
            size="lg"
            backgroundColor="#4ea7f5"
            textColor="white"
            borderColor="transparent"
            href="/add"
        >
          Add/Sub
        </Button>

        <Button 
            size="lg"
            backgroundColor="#4ea7f5"
            textColor="white"
            borderColor="transparent"
            href="/mult"
        >
          Multiplication
        </Button>

        <Button 
            size="lg"
            backgroundColor="#4ea7f5"
            textColor="white"
            borderColor="transparent"
            href="/div"
        >
          Division
        </Button>
    </div>

    <!-- Just use ScoreBox Component -->
    <ScoreBox />

    <script>
      import { getAuth, onAuthStateChanged } from 'firebase/auth';
      import { app } from "../lib/firebase_client.ts";
      import { updateScore } from "../lib/score.ts";
      
      const auth = getAuth(app);
      updateScore(0); // Update score box

      document.addEventListener("DOMContentLoaded", () => {
        const signInButton = document.getElementById("sign-in-button");
        const sideMenuContainer = document.getElementById("side-menu-container");
        const scoreBox = document.getElementById("score-box");

        const auth = getAuth(app);

        // Load saved theme from localStorage
        const savedTheme = localStorage.getItem("selectedTheme");
        if (savedTheme) {
          document.body.style.backgroundImage = `url('/background.svg?color=${savedTheme.slice(1)}')`;
        }

        // Function to get the stored score
        function getScore() {
          return parseInt(localStorage.getItem("userScore") || "0", 10);
        }

        // Function to update score in localStorage
        function updateScore(change: number) {
          const newScore = getScore() + change;
          localStorage.setItem("userScore", newScore.toString());
          if(scoreBox){
            scoreBox.innerText = `Score: ${newScore}`;
          }
        }

        // Initialize the score display
        if(scoreBox) {
        scoreBox.innerText = `Score: ${getScore()}`;
        }
        // Listen for client-side auth changes
        onAuthStateChanged(auth, (user) => {
          if (user) {
            if (signInButton) signInButton.style.display = "none";
            if (sideMenuContainer) sideMenuContainer.classList.remove("hidden");
          }
        });
      });
    </script>
  </body>
</html>
