---
import NumberInput from '../components/NumberInput.astro';
import Button from '../components/Button.astro';
import '../styles/styles.css';


const colors = [
 { color: "#2baced", image: "baseBlue.jpg" },  // Default blue
 { color: "#000000", image: "baseBlack.jpg" }, // Black
 { color: "#00FFFF", image: "baseCyan.jpg" },  // Cyan
 { color: "#FF1493", image: "basePink.jpg" },  // Pink
 { color: "#FF1373", image: "baseDarkPink.jpg" }, // Dark Pink "#FF1373"
 { color: "#008000", image: "baseGreen.jpg" }, // Green
 { color: "#FF0000", image: "baseRed.jpg" },   // Red
 { color: "#800080", image: "basePurple.jpg" }, // Purple
 { color: "#EEEE00", image: "baseYellow.jpg" }, // Yellow
 { color: "#FFA500", image: "baseOrange.jpg" }, // Orange
];
---


<div class="settings-container">
 <div class="settings-form">
   <label for="email-input">Email Address:</label>
   <input type="email" id="email-input" placeholder="Enter your email" />
   <button class="submit-button">Reset Password</button>
 </div>


 <button class="theme-button" id="choose-theme-btn">
   Choose Theme
 </button>


 <div class="theme-popup" id="theme-popup">
   <div class="color-picker">
     {colors.map(({ color, image }) => (
       <button
         style={{ backgroundColor: color }}
         class="color-button"
         data-image={image}
       ></button>
     ))}
   </div>
 </div>
</div>


<Button
 id="backButton"
 size="lg"
 backgroundColor="#4ea7f5"
 textColor="white"
 borderColor="transparent"
 href="/"
>
 Back
</Button>


<style>
 .settings-container {
   padding: 2rem;
   max-width: 600px;
   margin: auto;
   display: flex;
   flex-direction: column;
   gap: 2rem;
 }


 .settings-form {
   display: flex;
   flex-direction: column;
   gap: 1rem;
 }


 .submit-button, .theme-button {
   background-color: skyblue;
   color: white;
   padding: 0.8rem;
   border: none;
   cursor: pointer;
   border-radius: 5px;
   font-size: 1rem;
 }


 .submit-button:hover, .theme-button:hover {
   background-color: #1d99db;
 }


 .theme-popup {
   display: none;
   position: fixed;
   top: 50%;
   left: 50%;
   transform: translate(-50%, -50%);
   width: 20vw;
   height: 20vh;
   background-color: white;
   box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);
   padding: 1rem;
   border-radius: 8px;
   z-index: 100;
 }


 .theme-popup.show {
   display: block;
 }


 .color-picker {
   display: grid;
   grid-template-columns: repeat(5, 1fr);
   gap: 0.5rem;
   height: 100%;
 }


 .color-button {
   width: 100%;
   height: 80%;
   border: none;
   cursor: pointer;
   border-radius: 5px;
 }
</style>


<script>
 document.addEventListener("DOMContentLoaded", () => {
   const chooseThemeButton = document.getElementById("choose-theme-btn");
   const themePopup = document.getElementById("theme-popup");
   const colorButtons = document.querySelectorAll(".color-button");
  
   // Load saved theme from localStorage
   const savedTheme = localStorage.getItem("selectedTheme");
   if (savedTheme) {
     document.body.style.backgroundImage = `url('/${savedTheme}')`;
   }

   if (chooseThemeButton){
   chooseThemeButton.addEventListener("click", () => {
    if (themePopup) {
     themePopup.classList.add("show");
    }
   });
    }


   document.addEventListener("click", (e) => {
    if (chooseThemeButton && themePopup){
    if (!(themePopup.contains(e.target as HTMLButtonElement)) && !(chooseThemeButton.contains(e.target as HTMLButtonElement))) {
        if(themePopup) {
            themePopup.classList.remove("show");
        }
     }


    }
   });

   if (themePopup){
   themePopup.addEventListener("click", (e) => {
    
    const button = e.target as HTMLButtonElement;

    if (button && button.classList.contains("color-button")) {
      const image = button.getAttribute("data-image");


      // Update background
      document.body.style.backgroundImage = `url('/${image}')`;

      // Store selected theme in localStorage
      if (image) {
    localStorage.setItem("selectedTheme", image);
        }   

      // Close popup
      if (themePopup) {
      themePopup.classList.remove("show");
      }
    }
  });
    }

 });
</script>