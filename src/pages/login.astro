---
import '../styles/styles.css';
import { app } from "../lib/server";
import { getAuth } from "firebase-admin/auth";

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("__session")) {
  const sessionCookie = Astro.cookies.get("__session")?.value;
  if (sessionCookie) {
    const decodedCookie = await auth.verifySessionCookie(sessionCookie);
    if (decodedCookie) {
      return Astro.redirect("/dashboard");
    }
  }
}
---

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login - Math Arena</title>
</head>

<body id="login-signup-body">
  <div class="login-signup-container">
    <h1>Login to Math Arena</h1>
    <p id="error-message" class="error-message"></p>

    <form id="login-form" action="/api/auth/signin" method="post">
      <div class="input-group">
        <label for="email">Email</label>
        <input type="email" id="email" name="email" required />
      </div>

      <div class="input-group">
        <label for="password">Password</label>
        <input type="password" id="password" name="password" required />
      </div>

      <button type="submit">Login</button>
    </form>
 
    <p>Don't have an account? <a href="/signup">Sign Up</a></p>
    <a href="/"> Continue without an account </a>
  </div>

  <script>
    import {
      getAuth,
      inMemoryPersistence,
      signInWithEmailAndPassword,
    } from "firebase/auth";
    import { app } from "../lib/firebase";
    import type { AuthError } from 'firebase/auth';

    document.addEventListener("DOMContentLoaded", () => {
      const auth = getAuth(app);
      // This will prevent the browser from storing session data
      auth.setPersistence(inMemoryPersistence);

      const loginForm = document.getElementById("login-form") as HTMLFormElement;
      const errorMessageEl = document.getElementById("error-message") as HTMLParagraphElement;

      if (!loginForm || !errorMessageEl) {
        console.error("Form elements not found");
        return;
      }

      loginForm.addEventListener("submit", async (event) => {
        event.preventDefault();
        
        const formData = new FormData(loginForm);
        const email = formData.get("email")?.toString();
        const password = formData.get("password")?.toString();

        if (!email || !password) {
          errorMessageEl.textContent = "Please fill in all fields";
          return;
        }

        try {
          const userCredential = await signInWithEmailAndPassword(auth, email, password);
          const idToken = await userCredential.user.getIdToken();
          
          const response = await fetch("/api/auth/signin", {
            method: "POST",
            headers: {
              Authorization: `Bearer ${idToken}`,
            },
          });

          if (response.redirected) {
            window.location.assign(response.url);
          }
        } catch (error) {
          const firebaseError = error as AuthError;
          errorMessageEl.textContent = firebaseError.code ? 
            `Error: ${firebaseError.code.replace('auth/', '')}` : 
            'An error occurred during login';
        }
      });
    });
  </script>
</body>