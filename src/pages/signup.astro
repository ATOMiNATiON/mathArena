---
import '../styles/styles.css';
---

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sign Up - Math Arena</title>
</head>

<body id="login-signup-body">
  <div class="login-signup-container">
    <h1>Create an Account</h1>
    <p id="error-message" class="error-message"></p>

    <form id="signup-form" action="/api/auth/register" method="post">
      <div class="input-group">
        <label for="name">Full Name</label>
        <input type="text" id="name" name="name" required />
      </div>

      <div class="input-group">
        <label for="email">Email</label>
        <input type="email" id="email" name="email" required />
      </div>

      <div class="input-group">
        <label for="password">Password</label>
        <input type="password" id="password" name="password" required />
      </div>

      <button type="submit">Sign Up</button>
    </form>

    <p>Already have an account? <a href="/login">Log in</a></p>
    <a href="/"> Continue without an account </a>
  </div>

  <script>
    import { auth } from '../lib/firebase';
    import { createUserWithEmailAndPassword } from 'firebase/auth';
    import type { AuthError } from 'firebase/auth';

    document.addEventListener("DOMContentLoaded", () => {
      const signupForm = document.getElementById("signup-form") as HTMLFormElement | null;
      const errorMessageEl = document.getElementById("error-message") as HTMLParagraphElement | null;
      const nameInput = document.getElementById("name") as HTMLInputElement | null;
      const emailInput = document.getElementById("email") as HTMLInputElement | null;
      const passwordInput = document.getElementById("password") as HTMLInputElement | null;

      if (!signupForm || !errorMessageEl || !nameInput || !emailInput || !passwordInput) {
        console.error("Form elements not found");
        return;
      }

      signupForm.addEventListener("submit", async (event) => {
        event.preventDefault();

        const name = nameInput.value;
        const email = emailInput.value;
        const password = passwordInput.value;

        try {
          await createUserWithEmailAndPassword(auth, email, password);
          window.location.href = '/'; // Redirect to the main page after successful signup
        } catch (error) {
          const firebaseError = error as AuthError;
          if (firebaseError.code === 'auth/email-already-in-use') {
            errorMessageEl.textContent = 'Error: Email already in use. Please log in.';
          } else {
            errorMessageEl.textContent = `Error: ${firebaseError.message}`;
          }
        }
      });
    });
  </script>  
</body>